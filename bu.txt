;1281296

drawTileMap: ;uses IY
	ld ix,playerTileX
	
	ld hl,(ix-playerTileX+playerTileX) ;;ix or direct address???
	ld de,-10
	add hl,de
	ld (ix-playerTileX+loopFromX),hl
	push hl
	
	ld hl,0
	ld l,(ix-playerTileX+playerTileY)
	ld de,-7
	add hl,de
	;ld (ix-playerTileX+loopFromY),hl
	
	add hl,hl ;*2
	add hl,hl ;*4
	add hl,hl ;*8
	add hl,hl ;*16
	add hl,hl ;*32
	add hl,hl ;*64
	pop de ;de=loopFromX
	add hl,de
	ld de,tilemap
	add hl,de ;hl=pointer to first tile
	ld (ix-playerTileX+ptr_to_tile),hl

	ld a,(ix-playerTileX+playerOffsetY)
	add a,a
	add a,a
	add a,a
	add a,a 
	ld (ix-playerTileX+insetYsprite),a ; insetYsprite = playerOffsetY * 16
	
	xor a
	ld (tileDrawInsetY),a
		
	ld de,(VBUFF)
			
	ld a,(ix-playerTileX+playerOffsetX) 
	ld b,a
	ld (tileDrawInsetX),a
	ld a,16
	sub b
	ld (render16WidthX),a
	
	;ld hl,tilemap
	;ld (ptr_to_tile),hl
	ld hl,ptr_to_tile
	ld iy,(hl)
	
	call drawTileMapRunYLoop ;DRAW FIRST CULUMN
	
	ld hl,(VBUFF)
	ld de,0
	ld a,(render16WidthX)
	ld e,a
	add hl,de
	ex de,hl ;de=drawToPtr
	
	xor a
	ld (tileDrawInsetX),a
	
	ld a,16
	ld (render16WidthX),a

	ld b,19
drawTileMapLoopX:
	push bc 
		call drawTileMapRunYLoop
		ex de,hl
	pop bc
	djnz drawTileMapLoopX
	
	ld a,(ix-playerTileX+playerOffsetX)
	or a
	jr z,drawTileMapLoopXDontDrawLastX
		
	ld (render16WidthX),a
	call drawTileMapRunYLoop
drawTileMapLoopXDontDrawLastX:
	ret

drawTileMapRunYLoop: ;;DRAW A COLUMN ;must swap de and hl after call
	push iy
		ld a,(ix-playerTileX+insetYsprite)
		ld (tileDrawInsetY),a
		ld c,(ix-playerTileX+playerOffsetY)
		ld a,16
		sub c
		ld (render16WidthY),a
		
		call getTileSource ;;FIRST SPRITE
	
		ld a,16
		ld (render16WidthY),a
			
		xor a 
		ld (tileDrawInsetY),a
		
		ld b,14
drawTileMapLoopY:
		push bc
			call getTileSource
		pop bc
		djnz drawTileMapLoopY
				
		ld a,(ix-playerTileX+playerOffsetY)
		or a
		jr z,drawTileMapDontDrawLastY
		
		ld (render16WidthY),a
		call getTileSource
	
drawTileMapDontDrawLastY:

		ld hl,-(240*320)+16
		add hl,de
	pop iy
	inc iy
	ld de,(ix-playerTileX+loopFromX)
	inc de
	ld (ix-playerTileX+loopFromX),de
	
	ret
	
getTileSource:
	ld hl,(ix-playerTileX+loopFromX)
	add hl,hl
	jr c,getTileSourceOOB
	ld bc,WORLD_WIDTH*2
	sbc hl,bc
	jr nc,getTileSourceOOB 
	
	or a
	lea hl,iy
	ld bc,tilemap
	sbc hl,bc
	jr c,getTileSourceOOB
	ld bc,WORLD_WIDTH*WORLD_HEIGHT
	sbc hl,bc
	jr nc,getTileSourceOOB

	ld a,(iy)
	ld bc,0
	ld b,a 
	ld hl,(tiles)
	add hl,bc
	;ld hl,sampleImage
	ld bc,0
tileDrawInsetY equ $+1
	ld c,0
	add hl,bc
tileDrawInsetX equ $+1
	ld c,0
	add hl,bc
	jp render16x16
getTileSourceOOB:
	ld hl,sampleImage
	
render16x16: ;hl = source ;de = destination
	ld a,0
render16WidthY equ $-1
render16x16Loop:
    ld bc,0
	ld c,0
render16WidthX equ $-1	
	push hl
	push de
    ldir
	pop hl
	ld bc,320
    add hl,bc 
	ex de,hl ;de=destination+(320)
	pop hl
	ld bc,16
	add hl,bc
    dec a
    jr nz,render16x16Loop
	
	ld bc,WORLD_WIDTH
	add iy,bc ;iy += WORLD_WIDTH
    ret
	
sampleImage:
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h
 .db 008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h,008h