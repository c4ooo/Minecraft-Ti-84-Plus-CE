#define mapHight 8
#define mapWidth 1024
#define tilemap pixelShadow
generateWorld:

	ld hl,$000000
	ld (tilemap),hl
	ld hl,tilemap
	ld de,tilemap+1
	ld bc, mapWidth*mapHight
	ldir
	
	ld hl,tilemap
	ld a,1
	ld (hl),a
	ld de,tilemap+1
	ld bc, mapWidth-1
	ldir
	
	ld hl,tilemap+mapWidth+mapWidth
	ld a,1
	ld (hl),a
	ld de,tilemap+mapWidth+mapWidth+1
	ld bc, mapWidth-1
	ldir
	
	ld hl,tilemap+mapWidth+mapWidth+mapWidth+mapWidth+mapWidth
	ld a,1
	ld (hl),a
	ld de,tilemap+mapWidth+mapWidth+mapWidth+mapWidth+mapWidth+1
	ld bc, mapWidth-1
	ldir
	
	ld hl,0
	ld (playerTileX),hl
	ld (playerTileY),hl 
	ld (playerOfsetX),hl
	ld (playerOfsetY),hl
	;;sets both playerTileY, playerOfsetX and playerOfsetY
	;ld (playerOfsetX),hl 
	call playGame
	jp mainMenuStartUp
	
playGame:

	call drawWholeMap
	
gameLoop:

	
	call keyScan
	ld hl,$F5001E
	ld a,(hl)
	tst a,%00000001
	jp z,noDownGame

	
noDownGame: ;LEFT
	tst a,%00000010
	jp z,noLeftGame
	ld hl,(playerOfsetX)
	dec hl
	dec hl
	dec hl
	dec hl
	ld (playerOfsetX),hl
	ld a,l
	cp -4
	jp nz,keyTestsOver
	ld hl,12
	ld (playerOfsetX),hl
	ld hl,(playerTileX)
	dec hl
	ld (playerTileX),hl
	jp keyTestsOver

noLeftGame: ;RIGHT
	tst a,%00000100
	jp z,noRightGame
	ld hl,(playerOfsetX)
	inc hl
	inc hl
	inc hl
	inc hl
	ld (playerOfsetX),hl
	ld a,l
	cp 16
	jp nz,keyTestsOver
	ld hl,0
	ld (playerOfsetX),hl
	ld hl,(playerTileX)
	inc hl
	ld (playerTileX),hl
	jp keyTestsOver
	
noRightGame:
	tst a,%00001000
	jp z,keyTestsOver

	
keyTestsOver:

	call drawWholeMap
	ld hl,(tileMapBuffer)
	ld de,graphBuff
	ld bc, 320*240
	ldir
	
	ld hl,(playerTileX)
	ld de,testString
	add hl,de
	ld de,cord(0,5)
	call renderChar

	
	call flipBuffers

    call keyScan
	ld hl,$F5001C
	ld a,(hl)
	tst a,%01000000
	jp z,gameLoop
	
	ret
	
;drawWholeMap:
;	ld hl,(tileMapBuffer)
;	ld de,(BPlus1)
;	ld bc,320*240
;	ld a,0
;	ld (hl),a
;	ldir
;	
;	ld de,(playerTileX)
;	ld hl,-10
;	add hl,de
;	bit 7,h
;	jr z,playerTileXMinus10GreaterThenZero ;Fuck my life, how do you do local labels again?
;	ld hl,0
;playerTileXMinus10GreaterThenZero:	
;	ld (tempVar0),hl
;	
;	ld hl,(playerTileX)
;	ld de,10
;	add hl,de
;	ld de,mapWidth
;	or a 
;	sbc hl,de
;	bit 7,h
;	jr nz,playerTileXPlus10GreaterThenMapWidth
;	ld hl,mapWidth
;playerTileXPlus10GreaterThenMapWidth:
;	ld (tempVar1),hl
;	
;	
;	;ld a,(playerTileY)
;	;sub 8
;	;ld (tempVar2),a
;	;add a,15
;	;ld (temVar3),a
;	
;	ld hl,(tileMapBuffer)
;	ld (tempVar5),hl
;
;
;	ld hl,(tempVar0)
;drawWholeMapXLoop:
;
;
;	ld hl,
;	
;
;	ret
;	
drawWholeMap:

	ld hl,(tileMapBuffer)
	ld de,(BPlus1)
	ld bc,320*240
	ld a,0
	ld (hl),a
	ldir
	
	ld de,(playerTileX)
	ld hl,-10
	add hl,de
	ld (tempVar0),hl
	
	ld a,(playerTileY)
	sub 7
	ld (tempVar2),a
	
	ld a,(playerTileY)
	add a,a
	add a,a
	add a,a
	ld hl,0
	ld l,a
	;ld hl,0
	;ld h,a
	;add hl,hl
	;add hl,hl
	ld hl,0
	ld de,(playerTileX)
	add hl,de
	ld de,tilemap-10-(mapWidth*7)
	add hl,de
	ld (tempVar4),hl
	
	ld a,(playerOfsetY)
	ld a,0
	ld hl,$00A000
	ld l,a
	mlt hl
	add hl,hl
	ex de,hl
	ld hl,(tileMapBuffer)
	or a
	sbc hl,de
	ld de,(playerOfsetX)
	or a
	sbc hl,de ;hl=(tileMapBuffer)-(playerOfsetX)-((playerOfsetY)*320)
	ld (tempVar5),hl

	ld b,15
drawWholeMapYLoop:
	push bc
	ld hl,(tempVar0)
	ld (tempVar1),hl
	
	ld a,(tempVar2) 
	cp mapHight 
	jp nc,skipInY
	
	ld hl,render16x16FirstColumb
	ld (spriteCallJump+1),hl
	
	call progressTileMap
	
	ld hl,render16x16
	ld (spriteCallJump+1),hl
	
	ld b,21-2
drawWholeMapXLoop:
		push bc
		call progressTileMap
		pop bc

	djnz drawWholeMapXLoop
			
	ld hl,render16x16LastColumb
	ld (spriteCallJump+1),hl
	
	call progressTileMap
		
		ld a,(tempVar2)
		inc a
		ld (tempVar2),a
		
		ld de,(tempVar5)
		ld hl,16*320-(21*16)
		add hl,de
		ld (tempVar5),hl
		
		ld hl,(tempVar4)
		ld de, mapWidth-21
		add hl,de
		ld (tempVar4),hl
	pop bc
	djnz drawWholeMapYLoop
	ret
skipInY:
	ld a,(tempVar2)
	inc a
	ld (tempVar2),a
	
	ld de,(tempVar5)
	ld hl,16*320
	add hl,de
	ld (tempVar5),hl
	
	ld hl,(tempVar4)
	ld de, mapWidth
	add hl,de
	ld (tempVar4),hl
	
	pop bc
	dec b
	jp nz, drawWholeMapYLoop
	ret
	
progressTileMap:
		ld de,(tempVar1)
		bit 7,d
		jr nz,skipInX
		ld hl,mapWidth-1
		or a 
		sbc hl,de
		bit 7,h
		jr nz,skipInX
		
		ld hl,(tempVar4)
		ld de,0
		ld d,(hl)
		ld hl,tileset
		add hl,de
		ld de,(tempVar5)
		
spriteCallJump:
		call 000000
skipInX:	
		
		ld hl,(tempVar1)
		inc hl
		ld (tempVar1),hl
		
		ld de,(tempVar5)
		ld hl,16
		add hl,de
		ld (tempVar5),hl
		
		ld hl,(tempVar4)
		inc hl
		ld (tempVar4),hl
		ret
testString:
 .db "0123456789",0
